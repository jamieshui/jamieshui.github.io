(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{433:function(e,v,_){"use strict";_.r(v);var t=_(56),a=Object(t.a)({},(function(){var e=this,v=e.$createElement,_=e._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[_("h3",{attrs:{id:"分阶段答出vue生命周期钩子函数及每个阶段的职责"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#分阶段答出vue生命周期钩子函数及每个阶段的职责"}},[e._v("#")]),e._v(" 分阶段答出Vue生命周期钩子函数及每个阶段的职责")]),e._v(" "),_("ol",[_("li",[e._v("创建阶段：\n"),_("code",[e._v("beforeCreate")]),e._v("：实例刚从内存中创建出来，还没有初始化data和method\n"),_("code",[e._v("created")]),e._v("：实例已从内存中创建出来，此时初始化了data和method\n"),_("code",[e._v("beforeMount")]),e._v("：此时已完成模板的渲染，但还未渲染到界面中去\n"),_("code",[e._v("mounted")]),e._v("：模板渲染到了浏览器，创建阶段结束，进入运行阶段")]),e._v(" "),_("li",[e._v("运行阶段\n"),_("code",[e._v("beforeUpdate")]),e._v("：数据更新时停用，在更新前访问现有的DOM\n"),_("code",[e._v("updated")]),e._v("：页面重新渲染完毕，页面中的数据和data一致")]),e._v(" "),_("li",[e._v("销毁阶段\n"),_("code",[e._v("beforeDestroy")]),e._v("：实例销毁前停用。在这一步，实例仍可用\n"),_("code",[e._v("destroyed")]),e._v("：实例销毁后调用。该钩子被调用后，对应vue实例的所有指令被解绑，所有事件监听器被移除，所有子实例均被销毁。")])]),e._v(" "),_("h3",{attrs:{id:"vue父子组件生命周期调用顺序"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#vue父子组件生命周期调用顺序"}},[e._v("#")]),e._v(" Vue父子组件生命周期调用顺序")]),e._v(" "),_("ol",[_("li",[e._v("加载渲染过程：父 "),_("code",[e._v("beforeCreate")]),e._v(" -> 父 "),_("code",[e._v("created")]),e._v(" -> 父 "),_("code",[e._v("beforeMount")]),e._v(" -> 子 "),_("code",[e._v("beforeCreate")]),e._v(" -> 子 "),_("code",[e._v("created")]),e._v(" -> 子 "),_("code",[e._v("beforeMount")]),e._v(" -> 子 "),_("code",[e._v("mounted")]),e._v(" -> 父 "),_("code",[e._v("mounted")])]),e._v(" "),_("li",[e._v("更新过程：\n"),_("ul",[_("li",[e._v("父组件：父 "),_("code",[e._v("beforeUpdate")]),e._v(" -> 父 "),_("code",[e._v("updated")])]),e._v(" "),_("li",[e._v("子组件：父 "),_("code",[e._v("beforeUpdate")]),e._v(" -> 子 "),_("code",[e._v("beforeUpdate")]),e._v(" -> 子 "),_("code",[e._v("updated")]),e._v(" -> 父 "),_("code",[e._v("updated")])])])]),e._v(" "),_("li",[e._v("销毁过程：父 "),_("code",[e._v("beforeDestroy")]),e._v(" -> 子 "),_("code",[e._v("beforeDestroy")]),e._v(" -> 子 "),_("code",[e._v("destroyed")]),e._v(" -> 父 "),_("code",[e._v("destroyed")])])]),e._v(" "),_("h3",{attrs:{id:"vue在哪个生命周期内调用异步请求"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#vue在哪个生命周期内调用异步请求"}},[e._v("#")]),e._v(" Vue在哪个生命周期内调用异步请求？")]),e._v(" "),_("ol",[_("li",[_("code",[e._v("created")]),e._v(" / "),_("code",[e._v("beforeMount")]),e._v(" / "),_("code",[e._v("mounted")])]),e._v(" "),_("li",[e._v("推荐在 "),_("code",[e._v("created")]),e._v(" 钩子函数中调用异步请求：\n"),_("ul",[_("li",[e._v("相对 "),_("code",[e._v("beforeMount")]),e._v(" / "),_("code",[e._v("mounted")]),e._v(" 能更快获取服务端数据，减少页面 loading 时间。")]),e._v(" "),_("li",[_("code",[e._v("SSR")]),e._v("（Server-Side Rendering 服务器端渲染）不支持 "),_("code",[e._v("beforeMount")]),e._v(" / "),_("code",[e._v("mounted")]),e._v(" 钩子函数，放在 "),_("code",[e._v("created")]),e._v(" 中有助于一致性。")])])])]),e._v(" "),_("h3",{attrs:{id:"对keep-alive的理解"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#对keep-alive的理解"}},[e._v("#")]),e._v(" 对keep-alive的理解")]),e._v(" "),_("h4",{attrs:{id:"keep-alive的定义"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#keep-alive的定义"}},[e._v("#")]),e._v(" keep-alive的定义")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("keep-alive")]),e._v("是一个抽象组件，它自身不会渲染DOM元素，也不会出现在父组件中；使用 "),_("code",[e._v("keep-alilve")]),e._v("包裹动态组件时，它会缓存不活动的组件实例，而不是销毁它们。")])]),e._v(" "),_("h4",{attrs:{id:"keep-alive的使用场景"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#keep-alive的使用场景"}},[e._v("#")]),e._v(" keep-alive的使用场景")]),e._v(" "),_("ul",[_("li",[e._v("首页列表激活态：论坛贴吧新闻用于控制文章/邮件/通知的状态")])]),e._v(" "),_("h4",{attrs:{id:"keep-alive组件的实现原理"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#keep-alive组件的实现原理"}},[e._v("#")]),e._v(" keep-alive组件的实现原理")]),e._v(" "),_("h3",{attrs:{id:"v-if-v-show的区别"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#v-if-v-show的区别"}},[e._v("#")]),e._v(" v-if/v-show的区别")]),e._v(" "),_("ol",[_("li",[e._v("相同点：都用于控制元素的显示/隐藏")]),e._v(" "),_("li",[e._v("不同点：\n"),_("ul",[_("li",[_("code",[e._v("v-if")]),e._v(" ：首次渲染时——\n"),_("ul",[_("li",[e._v("若条件为假，什么也不操作，则页面当作没有这个元素；")]),e._v(" "),_("li",[e._v("若条件为真，则开始局部编译，动态地向 "),_("code",[e._v("DOM")]),e._v(" 元素里添加元素；")]),e._v(" "),_("li",[e._v("若条件从真变假，则也开始局部编译，删除这些元素。")])])]),e._v(" "),_("li",[_("code",[e._v("v-show")]),e._v(" ：无论条件为真或假，第一次渲染都会编译出来，即将标签添加到 "),_("code",[e._v("DOM")]),e._v(" 中，通过 "),_("code",[e._v("display")]),e._v(" 属性来控制元素的显示/隐藏。")])])])]),e._v(" "),_("ul",[_("li",[e._v("性能角度：\n"),_("ul",[_("li",[_("code",[e._v("v-show")]),e._v(" 的性能高于 "),_("code",[e._v("v-if")]),e._v(" ,通过 "),_("code",[e._v("display")]),e._v(" 属性来控制显示/隐藏仅会触发页面"),_("strong",[e._v("重绘")]),e._v("； "),_("code",[e._v("v-if")]),e._v(" 通过节点的增加删除控制元素是否显示会触发页面的"),_("strong",[e._v("回流")]),e._v("；回流必会导致重绘。")])])])]),e._v(" "),_("h3",{attrs:{id:"vuex"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#vuex"}},[e._v("#")]),e._v(" Vuex")]),e._v(" "),_("h4",{attrs:{id:"vuex的定义"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#vuex的定义"}},[e._v("#")]),e._v(" Vuex的定义")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("Vuex")]),e._v(" 是 "),_("code",[e._v("Vue.js")]),e._v(" 的状态管理工具，用于解决vue中状态共享的问题。")])]),e._v(" "),_("h4",{attrs:{id:"vuex的使用场景"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#vuex的使用场景"}},[e._v("#")]),e._v(" Vuex的使用场景")]),e._v(" "),_("ul",[_("li",[e._v("在列表中增加/删除物品时，比如在电商购物车中增删商品，可用 "),_("code",[e._v("Vuex")]),e._v(" 处理其数据流。")])]),e._v(" "),_("h4",{attrs:{id:"vuex的实现原理-用到了什么设计模式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#vuex的实现原理-用到了什么设计模式"}},[e._v("#")]),e._v(" Vuex的实现原理，用到了什么设计模式？ --\x3e")]),e._v(" "),_("h2",{attrs:{id:"element-ui-组件库"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#element-ui-组件库"}},[e._v("#")]),e._v(" Element-UI 组件库")]),e._v(" "),_("ul",[_("li",[e._v("Element-UI 是一个基于 Vue.js 的高质量组件库，提供了一整套实用的 UI 组件和工具，帮助开发者更快速、更简便地构建 Web 应用程序。Element-UI 具有丰富的组件，如表格、对话框、按钮、表单、导航菜单等，可以大大提高开发效率。")])]),e._v(" "),_("blockquote",[_("p",[e._v("面试考察要点：")]),e._v(" "),_("ol",[_("li",[e._v("基本概念和使用场景：了解对 Element-UI 的基本认识，以及它在 Vue.js 项目中的应用场景。")]),e._v(" "),_("li",[e._v("常用组件：询问在实际项目中使用过的 Element-UI 组件，如何利用这些组件实现功能需求。")]),e._v(" "),_("li",[e._v("组件定制和主题：评估是否了解如何定制 Element-UI 组件的样式和行为，以及如何使用主题系统。")]),e._v(" "),_("li",[e._v("表单验证：了解在使用 Element-UI 的表单组件时，如何进行表单验证和错误提示。")]),e._v(" "),_("li",[e._v("数据绑定和事件处理：探讨如何在 Element-UI 组件中进行数据绑定和事件处理，以满足项目需求。")]),e._v(" "),_("li",[e._v("与 Vuex 和 Vue Router 的集成：评估是否了解如何将 Element-UI 与 Vuex 和 Vue Router 等其他 Vue 生态工具集成。")]),e._v(" "),_("li",[e._v("性能优化：了解是否掌握按需引入 Element-UI 组件的方法，以降低项目的打包体积。")]),e._v(" "),_("li",[e._v("自定义组件：询问是否有在 Element-UI 基础上开发自定义组件的经验，以满足特定的业务需求。")]),e._v(" "),_("li",[e._v("实际项目经验：探讨在实际项目中使用 Element-UI 的经验，以及解决问题的能力。")])])])])}),[],!1,null,null,null);v.default=a.exports}}]);