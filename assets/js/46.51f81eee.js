(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{442:function(e,l,t){"use strict";t.r(l);var i=t(56),v=Object(i.a)({},(function(){var e=this,l=e.$createElement,t=e._self._c||l;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"v-bind与v-model的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v-bind与v-model的区别"}},[e._v("#")]),e._v(" v-bind与v-model的区别")]),e._v(" "),t("ul",[t("li",[e._v("v-bind是一个单向数据绑定，映射关系：Model->View，我们不需要进行额外的DOM操作，只需要进行Model的操作就可以实现视图的联动更新。")]),e._v(" "),t("li",[e._v("v-model是一个双向数据绑定，映射关系：View接受的数据,传给model,model的数据再传给view。把Model绑定到View的同时也将View绑定到Model上，这样就既可以通过更新Model来实现View的自动更新，也可以通过更新View来实现Model数据的更新。所以，当我们用JavaScript代码更新Model时，View就会自动更新，反之，如果用户更新了View，Model的数据也自动被更新了。\n"),t("ul",[t("li",[e._v("v-model本质其实是一个语法糖，其实v-model就相当于 v-bind绑定一个value属性，然后v-on给该元素绑定input事件。")])])])]),e._v(" "),t("h2",{attrs:{id:"emit的用法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#emit的用法"}},[e._v("#")]),e._v(" $emit的用法")]),e._v(" "),t("ul",[t("li",[e._v("父组件可以使用"),t("code",[e._v("props")]),e._v("把数据传给子组件。")]),e._v(" "),t("li",[e._v("子组件可以使用"),t("code",[e._v("$emit")]),e._v("触发父组件的自定义事件。")])])])}),[],!1,null,null,null);l.default=v.exports}}]);