(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{426:function(S,s,t){"use strict";t.r(s);var l=t(56),e=Object(l.a)({},(function(){var S=this,s=S.$createElement,t=S._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":S.$parent.slotKey}},[t("h2",{attrs:{id:"scss-less"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#scss-less"}},[S._v("#")]),S._v(" SCSS / LESS")]),S._v(" "),t("ul",[t("li",[t("p",[S._v("SCSS 和 LESS 都是 CSS 预处理器，它们可以让开发者用更高级、灵活的语法编写样式表，并在编译时将其转换为普通的 CSS 文件。这两者的主要目的是提高开发效率、可维护性和可读性。")]),S._v(" "),t("ol",[t("li",[t("p",[S._v("SCSS（Sassy CSS）")]),S._v(" "),t("p",[S._v("SCSS 是 Sass（Syntactically Awesome Style Sheets）的一种语法风格。Sass 是一种成熟、稳定、强大的 CSS 扩展语言。SCSS 语法非常接近于原生 CSS，这使得从 CSS 迁移到 SCSS 更为容易。SCSS 提供了诸如变量、嵌套、混合（mixins）、继承和函数等高级功能。")])]),S._v(" "),t("li",[t("p",[S._v("LESS（Leaner Style Sheets）")]),S._v(" "),t("p",[S._v("LESS 是另一种流行的 CSS 预处理器，提供了与 SCSS 类似的功能，如变量、嵌套、混合、函数等。LESS 语法也非常接近原生 CSS，可以帮助开发者更方便地组织和重用代码。LESS 是用 JavaScript 编写的，可以在浏览器或 Node.js 环境中编译。")])])])])]),S._v(" "),t("blockquote",[t("p",[S._v("面试考察要点：")]),S._v(" "),t("ol",[t("li",[S._v("基本语法和特性：了解 SCSS 和 LESS 的基本语法以及它们的核心功能，如变量、嵌套、混合、继承等。")]),S._v(" "),t("li",[S._v("预处理器的优势和适用场景：考察是否了解使用预处理器的优点，以及在何种情况下使用它们。")]),S._v(" "),t("li",[S._v("工作流和编译：了解如何在项目中配置和使用 SCSS 和 LESS，以及如何将它们编译成纯 CSS。")]),S._v(" "),t("li",[S._v("框架和库：熟悉一些基于 SCSS 和 LESS 的流行 CSS 框架，如 Bootstrap、Foundation 等。")]),S._v(" "),t("li",[S._v("最佳实践和代码组织：了解如何组织和管理 SCSS 或 LESS 文件，以及遵循的最佳实践。")]),S._v(" "),t("li",[S._v("性能和优化：探讨如何通过使用预处理器提高 CSS 性能，以及在编译和部署时如何进行优化。")]),S._v(" "),t("li",[S._v("和其他预处理器的比较：了解 SCSS 和 LESS 之间的差异以及与其他预处理器（如 Stylus）的对比。")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);