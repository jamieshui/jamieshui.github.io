(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{407:function(e,r,a){"use strict";a.r(r);var t=a(56),v=Object(t.a)({},(function(){var e=this,r=e.$createElement,a=e._self._c||r;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h2",{attrs:{id:"for-in-和-for-of-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#for-in-和-for-of-的区别"}},[e._v("#")]),e._v(" for-in 和 for-of 的区别")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("for - in")]),e._v(" ：ES5标准，遍历的是key（可遍历对象、数组或字符串的key）。\n"),a("blockquote",[a("p",[a("code",[e._v("for...in")]),e._v(" 不应该用于迭代一个关注索引顺序的"),a("code",[e._v("Array")]),e._v("。\n"),a("code",[e._v("for ... in")]),e._v(" 是为遍历对象属性而构建的，不建议与数组一起使用，数组可以用 "),a("code",[e._v("Array.prototype.forEach()")]),e._v(" 和 "),a("code",[e._v("for ... of")]),e._v(" 。")])])]),e._v(" "),a("li",[a("code",[e._v("for - of")]),e._v(" ：ES6标准，遍历的是value（可遍历对象、数组或字符串的value）。")])]),e._v(" "),a("h2",{attrs:{id:"与-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#与-的区别"}},[e._v("#")]),e._v(" == 与 === 的区别")]),e._v(" "),a("ul",[a("li",[e._v("推荐使用 "),a("strong",[a("code",[e._v("===")])]),e._v(" 。")]),e._v(" "),a("li",[e._v("若左右两侧的数据类型不一致：\n"),a("ul",[a("li",[a("code",[e._v("==")]),e._v(" 会"),a("strong",[e._v("强转")]),e._v("左侧操作数的数据类型，使其与右侧操作数的数据类型保持一致再进行比较数值是否相等。")]),e._v(" "),a("li",[a("code",[e._v("===")]),e._v(" 直接返回 "),a("code",[e._v("false")]),e._v(" 。")])])]),e._v(" "),a("li",[e._v("特例："),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("null == undefined // true  因为undeined的值派生自null的值\nnull === undefined // false\nNaN == NaN // false   NaN（Not a Number）与任何数不相等，包括自身\nNaN === NaN // false\n")])])])])]),e._v(" "),a("h2",{attrs:{id:"扩展运算符-spread运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#扩展运算符-spread运算符"}},[e._v("#")]),e._v(" ... 扩展运算符（spread运算符）")]),e._v(" "),a("ul",[a("li",[e._v("扩展运算符可以用于数组的构造，也可以用于调用函数时，将一个数组用作函数参数（即，将该数组转化为参数的列表，使其成为函数的参数）。")])]),e._v(" "),a("h2",{attrs:{id:"map"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#map"}},[e._v("#")]),e._v(" Map")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("Map")]),e._v(" 常用于构建字典，灵活使用 "),a("code",[e._v("set")]),e._v(" / "),a("code",[e._v("get")]),e._v(" 方法可以简化代码。")]),e._v(" "),a("li",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Map",target:"_blank",rel:"noopener noreferrer"}},[e._v("Map - JavaScript | MDN"),a("OutboundLink")],1)])]),e._v(" "),a("h2",{attrs:{id:"set"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#set"}},[e._v("#")]),e._v(" Set")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("Set")]),e._v(" 常用于数组去重。")]),e._v(" "),a("li",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Set",target:"_blank",rel:"noopener noreferrer"}},[e._v("Set - JavaScript | MDN"),a("OutboundLink")],1)])]),e._v(" "),a("h2",{attrs:{id:"array-的常用函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#array-的常用函数"}},[e._v("#")]),e._v(" Array 的常用函数")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("Array.from(arrayLike[, mapFn[, thisArg]])")]),e._v(" ：常用于实现数组的浅拷贝。\nSpread 运算符 "),a("code",[e._v("...")]),e._v(" 也可以实现数组的浅拷贝。")]),e._v(" "),a("li",[a("code",[e._v("Array.prototype.includes(valueToFind[, fromIndex])")]),e._v(" ：用于判断一个数组中是否包含一个指定的值，若包含则返回 "),a("code",[e._v("true")]),e._v(" ，反之 "),a("code",[e._v("false")]),e._v(" 。")]),e._v(" "),a("li",[a("code",[e._v("Array.prototype.filter(callback(element[, index[, array]])[, thisArg])")]),e._v(" ：过滤函数，传入某种方法对数组进行过滤。不改变原数组。\n"),a("ul",[a("li",[a("code",[e._v("arr1.filter(item => arr2.includes(item))")]),e._v(" ，其中 "),a("code",[e._v("filter")]),e._v(" 函数利用 "),a("code",[e._v("item => arr2.includes(item)")]),e._v(" 箭头函数表达式对arr1进行筛选。")])])]),e._v(" "),a("li",[a("code",[e._v("Array.prototype.forEach(callback(currentValue [, index [, array]])[, thisArg])")]),e._v("：遍历数组，并返回数组的每一项和索引。（类似于 for 循环遍历数组的每一项）\n"),a("blockquote",[a("p",[e._v("Map 实例也可以使用 forEach 函数。\n"),a("strong",[e._v("ATTENTION")]),e._v("（踩坑记录）:\n"),a("code",[e._v("forEach")]),e._v(" 中：不可使用 "),a("code",[e._v("break")]),e._v(" 跳出循环且使用 "),a("code",[e._v("return")]),e._v(" 无效。")])])]),e._v(" "),a("li",[a("code",[e._v("Array.prototype.sort()")]),e._v("：排序函数。会改变原数组。\n"),a("ul",[a("li",[a("code",[e._v("arr.sort((a,b) => b - a); // 降序排列")])])])])]),e._v(" "),a("h2",{attrs:{id:"常用的相等-不等关系"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用的相等-不等关系"}},[e._v("#")]),e._v(" 常用的相等/不等关系")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("!undefined === true // true")])])])])}),[],!1,null,null,null);r.default=v.exports}}]);